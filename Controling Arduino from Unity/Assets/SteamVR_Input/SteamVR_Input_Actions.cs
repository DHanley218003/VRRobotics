//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_robotArmControl_InteractUI;
        
        private static SteamVR_Action_Boolean p_robotArmControl_GrabPinch;
        
        private static SteamVR_Action_Skeleton p_robotArmControl_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_robotArmControl_SkeletonRightHand;
        
        private static SteamVR_Action_Boolean p_robotArmControl_TouchPadUp;
        
        private static SteamVR_Action_Boolean p_robotArmControl_TouchPadRight;
        
        private static SteamVR_Action_Boolean p_robotArmControl_TouchPadDown;
        
        private static SteamVR_Action_Boolean p_robotArmControl_TouchPadLeft;
        
        private static SteamVR_Action_Pose p_robotArmControl_Pose;
        
        private static SteamVR_Action_Single p_robotArmControl_Squeeze;
        
        private static SteamVR_Action_Boolean p_robotArmControl_HeadSetOnHead;
        
        private static SteamVR_Action_Boolean p_robotArmControl_GrabGrip;
        
        private static SteamVR_Action_Boolean p_robotArmControl_Teleport;
        
        private static SteamVR_Action_Vibration p_robotArmControl_Haptic;
        
        public static SteamVR_Action_Boolean robotArmControl_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean robotArmControl_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Skeleton robotArmControl_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton robotArmControl_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Boolean robotArmControl_TouchPadUp
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_TouchPadUp.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean robotArmControl_TouchPadRight
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_TouchPadRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean robotArmControl_TouchPadDown
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_TouchPadDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean robotArmControl_TouchPadLeft
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_TouchPadLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose robotArmControl_Pose
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Single robotArmControl_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean robotArmControl_HeadSetOnHead
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_HeadSetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean robotArmControl_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean robotArmControl_Teleport
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration robotArmControl_Haptic
        {
            get
            {
                return SteamVR_Actions.p_robotArmControl_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.robotArmControl_InteractUI,
                    SteamVR_Actions.robotArmControl_GrabPinch,
                    SteamVR_Actions.robotArmControl_SkeletonLeftHand,
                    SteamVR_Actions.robotArmControl_SkeletonRightHand,
                    SteamVR_Actions.robotArmControl_TouchPadUp,
                    SteamVR_Actions.robotArmControl_TouchPadRight,
                    SteamVR_Actions.robotArmControl_TouchPadDown,
                    SteamVR_Actions.robotArmControl_TouchPadLeft,
                    SteamVR_Actions.robotArmControl_Pose,
                    SteamVR_Actions.robotArmControl_Squeeze,
                    SteamVR_Actions.robotArmControl_HeadSetOnHead,
                    SteamVR_Actions.robotArmControl_GrabGrip,
                    SteamVR_Actions.robotArmControl_Teleport,
                    SteamVR_Actions.robotArmControl_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.robotArmControl_InteractUI,
                    SteamVR_Actions.robotArmControl_GrabPinch,
                    SteamVR_Actions.robotArmControl_SkeletonLeftHand,
                    SteamVR_Actions.robotArmControl_SkeletonRightHand,
                    SteamVR_Actions.robotArmControl_TouchPadUp,
                    SteamVR_Actions.robotArmControl_TouchPadRight,
                    SteamVR_Actions.robotArmControl_TouchPadDown,
                    SteamVR_Actions.robotArmControl_TouchPadLeft,
                    SteamVR_Actions.robotArmControl_Pose,
                    SteamVR_Actions.robotArmControl_Squeeze,
                    SteamVR_Actions.robotArmControl_HeadSetOnHead,
                    SteamVR_Actions.robotArmControl_GrabGrip,
                    SteamVR_Actions.robotArmControl_Teleport};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.robotArmControl_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.robotArmControl_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.robotArmControl_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.robotArmControl_InteractUI,
                    SteamVR_Actions.robotArmControl_GrabPinch,
                    SteamVR_Actions.robotArmControl_TouchPadUp,
                    SteamVR_Actions.robotArmControl_TouchPadRight,
                    SteamVR_Actions.robotArmControl_TouchPadDown,
                    SteamVR_Actions.robotArmControl_TouchPadLeft,
                    SteamVR_Actions.robotArmControl_HeadSetOnHead,
                    SteamVR_Actions.robotArmControl_GrabGrip,
                    SteamVR_Actions.robotArmControl_Teleport};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.robotArmControl_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[0];
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.robotArmControl_SkeletonLeftHand,
                    SteamVR_Actions.robotArmControl_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.robotArmControl_InteractUI,
                    SteamVR_Actions.robotArmControl_GrabPinch,
                    SteamVR_Actions.robotArmControl_TouchPadUp,
                    SteamVR_Actions.robotArmControl_TouchPadRight,
                    SteamVR_Actions.robotArmControl_TouchPadDown,
                    SteamVR_Actions.robotArmControl_TouchPadLeft,
                    SteamVR_Actions.robotArmControl_Squeeze,
                    SteamVR_Actions.robotArmControl_HeadSetOnHead,
                    SteamVR_Actions.robotArmControl_GrabGrip,
                    SteamVR_Actions.robotArmControl_Teleport};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_robotArmControl_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/InteractUI")));
            SteamVR_Actions.p_robotArmControl_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/GrabPinch")));
            SteamVR_Actions.p_robotArmControl_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/RobotArmControl/in/SkeletonLeftHand")));
            SteamVR_Actions.p_robotArmControl_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/RobotArmControl/in/SkeletonRightHand")));
            SteamVR_Actions.p_robotArmControl_TouchPadUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/TouchPadUp")));
            SteamVR_Actions.p_robotArmControl_TouchPadRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/TouchPadRight")));
            SteamVR_Actions.p_robotArmControl_TouchPadDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/TouchPadDown")));
            SteamVR_Actions.p_robotArmControl_TouchPadLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/TouchPadLeft")));
            SteamVR_Actions.p_robotArmControl_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/RobotArmControl/in/Pose")));
            SteamVR_Actions.p_robotArmControl_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/RobotArmControl/in/Squeeze")));
            SteamVR_Actions.p_robotArmControl_HeadSetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/HeadSetOnHead")));
            SteamVR_Actions.p_robotArmControl_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/GrabGrip")));
            SteamVR_Actions.p_robotArmControl_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/RobotArmControl/in/Teleport")));
            SteamVR_Actions.p_robotArmControl_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/RobotArmControl/out/Haptic")));
        }
    }
}
